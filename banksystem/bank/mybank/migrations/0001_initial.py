# Generated by Django 2.1.2 on 2020-06-28 17:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_money', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('creation_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=20)),
                ('bankname', models.CharField(max_length=50, unique=True)),
                ('money', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('password', models.CharField(default=123456, max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='CusEmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicetype', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.CharField(max_length=18, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('phone', models.CharField(max_length=11)),
                ('address', models.CharField(max_length=50)),
                ('contact_name', models.CharField(max_length=10)),
                ('contact_phone', models.CharField(max_length=11)),
                ('contact_email', models.EmailField(max_length=254, null=True)),
                ('relation', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('departname', models.CharField(max_length=20)),
                ('departtype', models.CharField(max_length=15)),
                ('manager', models.CharField(max_length=18)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='mybank.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.CharField(max_length=18, primary_key=True, serialize=False)),
                ('empname', models.CharField(max_length=20)),
                ('empphone', models.CharField(max_length=11)),
                ('empaddr', models.CharField(max_length=50)),
                ('emptype', models.CharField(default=0, max_length=1)),
                ('empstart', models.DateField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='mybank.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date', models.DateTimeField()),
                ('count', models.DecimalField(decimal_places=2, max_digits=15)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loans', to='mybank.Branch')),
                ('customers', models.ManyToManyField(to='mybank.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='LoanPay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=6, max_digits=19)),
                ('date', models.DateTimeField()),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='mybank.Loan')),
            ],
        ),
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mybank.Account')),
                ('overdraw', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            bases=('mybank.account',),
        ),
        migrations.CreateModel(
            name='SavingAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mybank.Account')),
                ('currency_type', models.IntegerField()),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            bases=('mybank.account',),
        ),
        migrations.AddField(
            model_name='cusemp',
            name='cusID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serves', to='mybank.Customer'),
        ),
        migrations.AddField(
            model_name='cusemp',
            name='empID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='served', to='mybank.Employee'),
        ),
        migrations.AddField(
            model_name='account',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='mybank.Branch'),
        ),
        migrations.AddField(
            model_name='account',
            name='owners',
            field=models.ManyToManyField(related_name='accounts', to='mybank.Customer'),
        ),
        migrations.AlterUniqueTogether(
            name='loanpay',
            unique_together={('loan', 'amount', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='cusemp',
            unique_together={('empID', 'cusID')},
        ),
    ]
